#include <stdio.h>
#include<stdlib.h>
struct node
{
    int num;
    struct node *node;
} *ftnode;
int len;
void main()
{

   int loc;
   printf("Please enter the number of nodes: ");
   scanf("%d",&len);
   readvalues(len);
   printf("Please enter the location number to delete the node: ");
   scanf("%d",&loc);
   deletenode(loc);
   displayvalues();
}
void readvalues(int n)
{

    struct node *ntnode,*temp;
    int i,num;
    ftnode=(struct node*)malloc(sizeof(struct node));
    printf("Enter the first node value: ");
    scanf("%d",&num);
    ftnode->num=num;
    ftnode->node=NULL;
    temp=ftnode;
    for(i=2;i<=n;i++)
    {
        ntnode=(struct node*)malloc(sizeof(struct node));
        if(ntnode==NULL)
            printf("Memory not allocated\n");
        else
        {
            printf("Enter the value for node no %d: ",i);
            scanf("%d",&num);
            ntnode->num=num;
            ntnode->node=NULL;
            temp->node=ntnode;
            temp=ntnode;

        }
    }
}
void deletenode(int n)
{
    struct node *temp=ftnode;
    if(n>len)
    {
        printf("It is invalid location: ");
    }
    else if(n==1)
    {
        ftnode=ftnode->node;
        temp->node=NULL;
        free(temp);

    }
    else
    {
        int  i=1;
        struct node *p=ftnode,*q;
        while(i<n-1)
        {
            p=p->node;
            i++;
        }
        q=p->node;
        p->node=q->node;
        q->node=NULL;
        free(q);

    }
}
void displayvalues()
{
        struct node *temp;
        temp=ftnode;
        if(temp==NULL)
            printf("List is Empty: ");
        else
            while(temp!=NULL)
        {
            printf("%d\n",temp->num);
            temp=temp->node;
        }
}



